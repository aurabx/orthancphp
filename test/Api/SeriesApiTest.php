<?php
/**
 * SeriesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  AurabxOrthancPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Orthanc API
 *
 * This is the full documentation of the [REST API](https://orthanc.uclouvain.be/book/users/rest.html) of Orthanc.<p>This reference is automatically generated from the source code of Orthanc. A [shorter cheat sheet](https://orthanc.uclouvain.be/book/users/rest-cheatsheet.html) is part of the Orthanc Book.<p>An earlier, manually crafted version from August 2019, is [still available](2019-08-orthanc-openapi.html), but is not up-to-date anymore ([source](https://groups.google.com/g/orthanc-users/c/NUiJTEICSl8/m/xKeqMrbqAAAJ)).
 *
 * The version of the OpenAPI document: 1.12.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace AurabxOrthancPHP\Test\Api;

use \AurabxOrthancPHP\Configuration;
use \AurabxOrthancPHP\ApiException;
use \AurabxOrthancPHP\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SeriesApiTest Class Doc Comment
 *
 * @category Class
 * @package  AurabxOrthancPHP
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SeriesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for seriesGet
     *
     * List the available series.
     *
     */
    public function testSeriesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAnonymizePost
     *
     * Anonymize series.
     *
     */
    public function testSeriesIdAnonymizePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdArchiveGet
     *
     * Create ZIP archive.
     *
     */
    public function testSeriesIdArchiveGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdArchivePost
     *
     * Create ZIP archive.
     *
     */
    public function testSeriesIdArchivePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsGet
     *
     * List attachments.
     *
     */
    public function testSeriesIdAttachmentsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameCompressPost
     *
     * Compress attachment.
     *
     */
    public function testSeriesIdAttachmentsNameCompressPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameCompressedDataGet
     *
     * Get attachment (no decompression).
     *
     */
    public function testSeriesIdAttachmentsNameCompressedDataGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameCompressedMd5Get
     *
     * Get MD5 of attachment on disk.
     *
     */
    public function testSeriesIdAttachmentsNameCompressedMd5Get()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameCompressedSizeGet
     *
     * Get size of attachment on disk.
     *
     */
    public function testSeriesIdAttachmentsNameCompressedSizeGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameDataGet
     *
     * Get attachment.
     *
     */
    public function testSeriesIdAttachmentsNameDataGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameDelete
     *
     * Delete attachment.
     *
     */
    public function testSeriesIdAttachmentsNameDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameInfoGet
     *
     * Get info about the attachment.
     *
     */
    public function testSeriesIdAttachmentsNameInfoGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameIsCompressedGet
     *
     * Is attachment compressed?.
     *
     */
    public function testSeriesIdAttachmentsNameIsCompressedGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameMd5Get
     *
     * Get MD5 of attachment.
     *
     */
    public function testSeriesIdAttachmentsNameMd5Get()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNamePut
     *
     * Set attachment.
     *
     */
    public function testSeriesIdAttachmentsNamePut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameSizeGet
     *
     * Get size of attachment.
     *
     */
    public function testSeriesIdAttachmentsNameSizeGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameUncompressPost
     *
     * Uncompress attachment.
     *
     */
    public function testSeriesIdAttachmentsNameUncompressPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdAttachmentsNameVerifyMd5Post
     *
     * Verify attachment.
     *
     */
    public function testSeriesIdAttachmentsNameVerifyMd5Post()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdDelete
     *
     * Delete some series.
     *
     */
    public function testSeriesIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdGet
     *
     * Get information about some series.
     *
     */
    public function testSeriesIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdInstancesGet
     *
     * Get child instances.
     *
     */
    public function testSeriesIdInstancesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdInstancesTagsGet
     *
     * Get tags of instances.
     *
     */
    public function testSeriesIdInstancesTagsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdLabelsGet
     *
     * List labels.
     *
     */
    public function testSeriesIdLabelsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdLabelsLabelDelete
     *
     * Remove label.
     *
     */
    public function testSeriesIdLabelsLabelDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdLabelsLabelGet
     *
     * Test label.
     *
     */
    public function testSeriesIdLabelsLabelGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdLabelsLabelPut
     *
     * Add label.
     *
     */
    public function testSeriesIdLabelsLabelPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdMediaGet
     *
     * Create DICOMDIR media.
     *
     */
    public function testSeriesIdMediaGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdMediaPost
     *
     * Create DICOMDIR media.
     *
     */
    public function testSeriesIdMediaPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdMetadataGet
     *
     * List metadata.
     *
     */
    public function testSeriesIdMetadataGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdMetadataNameDelete
     *
     * Delete metadata.
     *
     */
    public function testSeriesIdMetadataNameDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdMetadataNameGet
     *
     * Get metadata.
     *
     */
    public function testSeriesIdMetadataNameGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdMetadataNamePut
     *
     * Set metadata.
     *
     */
    public function testSeriesIdMetadataNamePut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdModifyPost
     *
     * Modify series.
     *
     */
    public function testSeriesIdModifyPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdModuleGet
     *
     * Get series module.
     *
     */
    public function testSeriesIdModuleGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdNumpyGet
     *
     * Decode series for numpy.
     *
     */
    public function testSeriesIdNumpyGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdOrderedSlicesGet
     *
     * Order the slices.
     *
     */
    public function testSeriesIdOrderedSlicesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdPatientGet
     *
     * Get parent patient.
     *
     */
    public function testSeriesIdPatientGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdReconstructPost
     *
     * Reconstruct tags & optionally files of series.
     *
     */
    public function testSeriesIdReconstructPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdSharedTagsGet
     *
     * Get shared tags.
     *
     */
    public function testSeriesIdSharedTagsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdStatisticsGet
     *
     * Get series statistics.
     *
     */
    public function testSeriesIdStatisticsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for seriesIdStudyGet
     *
     * Get parent study.
     *
     */
    public function testSeriesIdStudyGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
